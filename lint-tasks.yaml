version: "3"

vars:
  G_LINT_VENV_DIR: "{{.G_BUILD_DIR}}/lint-venv"
  G_LINT_VENV_CHECKSUM_FILE: "{{.G_BUILD_DIR}}/lint#venv.md5"

tasks:
  check:
    cmds:
      - task: "cmake-check"
      - task: "cpp-check"
      - task: "py-check"
      - task: "toml-check"
      - task: "yml-check"

  fix:
    cmds:
      - task: "cmake-fix"
      - task: "cpp-fix"
      - task: "py-fix"
      - task: "toml-fix"
      - task: "yml-fix"

  cmake-check:
    deps: ["venv"]
    cmds:
      - task: "cmake"
        vars:
          FLAGS: "--check"

  cmake-fix:
    deps: ["venv"]
    cmds:
      - task: "cmake"
        vars:
          FLAGS: "--in-place"

  cpp-configs: "tools/yscope-dev-utils/exports/lint-configs/symlink-cpp-lint-configs.sh"

  cpp-check:
    cmds:
      - task: "cpp-format-check"
      - task: "cpp-static-check"

  cpp-fix:
    cmds:
      - task: "cpp-format-fix"
      - task: "cpp-static-fix"

  cpp-format-check:
    sources: &cpp_lint_source_files
      - "{{.ROOT_DIR}}/.clang-format"
      - "{{.ROOT_DIR}}/.clang-tidy"
      - "{{.TASKFILE}}"
      - "{{.G_SRC_SPIDER_DIR}}/.clang-format"
      - "{{.G_EXAMPLES_DIR}}/**/*"
      - "{{.G_SRC_SPIDER_DIR}}/**/*"
      - "{{.G_TEST_DIR}}/**/*"
    deps: ["cpp-configs", "venv"]
    cmds:
      - task: ":utils:cpp-lint:clang-format"
        vars:
          FLAGS: ["--dry-run"]
          INCLUDE_FILENAME_PATTERNS: ["*.cpp", "*.h", "*.hpp"]
          ROOT_PATHS: &cpp_source_files
            - "{{.G_SRC_SPIDER_DIR}}"
            - "{{.G_EXAMPLES_DIR}}"
            - "{{.G_TEST_DIR}}"
          VENV_DIR: "{{.G_LINT_VENV_DIR}}"

  cpp-format-fix:
    sources: *cpp_lint_source_files
    deps: ["cpp-configs", "venv"]
    cmds:
      - task: ":utils:cpp-lint:clang-format"
        vars:
          FLAGS: ["-i"]
          INCLUDE_FILENAME_PATTERNS: ["*.cpp", "*.h", "*.hpp"]
          ROOT_PATHS: *cpp_source_files
          VENV_DIR: "{{.G_LINT_VENV_DIR}}"

  cpp-static-check:
    # Alias task to `cpp-static-fix` since we don't currently support automatic fixes.
    # NOTE: clang-tidy does have the ability to fix some errors, but the fixes can be inaccurate.
    # When we eventually determine which errors can be safely fixed, we'll allow clang-tidy to
    # fix them.
    aliases: ["cpp-static-fix"]
    sources: *cpp_lint_source_files
    deps: [":config-cmake-project", "cpp-configs", "venv"]
    cmds:
      - task: ":utils:cpp-lint:clang-tidy-find"
        vars:
          FLAGS:
            - "--config-file '{{.ROOT_DIR}}/.clang-tidy'"
            - "-p '{{.G_SPIDER_COMPILE_COMMANDS_DB}}'"
          INCLUDE_FILENAME_PATTERNS: ["*.cpp", "*.h", "*.hpp"]
          OUTPUT_DIR: "{{.G_LINT_CLANG_TIDY_DIR}}"
          ROOT_PATHS:
            - "{{.G_SRC_SPIDER_DIR}}"
            - "{{.G_TEST_DIR}}"
          VENV_DIR: "{{.G_LINT_VENV_DIR}}"
      - task: ":utils:cpp-lint:clang-tidy-find"
        vars:
          FLAGS:
            - "--config-file '{{.ROOT_DIR}}/.clang-tidy'"
            - "-p '{{.G_EXAMPLES_COMPILE_COMMANDS_DB}}'"
          INCLUDE_FILENAME_PATTERNS: ["*.cpp", "*.h", "*.hpp"]
          OUTPUT_DIR: "{{.G_LINT_CLANG_TIDY_DIR}}"
          ROOT_PATHS:
            - "{{.G_EXAMPLES_DIR}}"
          VENV_DIR: "{{.G_LINT_VENV_DIR}}"

  py-check:
    cmds:
      - task: "py"
        vars:
          RUFF_FORMAT_FLAGS: "--diff"

  py-fix:
    cmds:
      - task: "py"
        vars:
          RUFF_CHECK_FLAGS: "--fix"

  py:
    internal: true
    vars:
      RUFF_CHECK_FLAGS: "{{.RUFF_CHECK_FLAGS | default \"\"}}"
      RUFF_FORMAT_FLAGS: "{{.RUFF_FORMAT_FLAGS | default \"\"}}"
    deps: ["venv"]
    cmds:
      - for:
          - "tests/integration"
        cmd: |-
          . "{{.G_LINT_VENV_DIR}}/bin/activate"
          mypy "{{.ITEM}}"
          ruff check {{.RUFF_CHECK_FLAGS}} "{{.ITEM}}"
          ruff format {{.RUFF_FORMAT_FLAGS}} "{{.ITEM}}"

  yml:
    aliases:
      - "yml-check"
      - "yml-fix"
    deps: ["venv"]
    cmds:
      - |-
        . "{{.G_LINT_VENV_DIR}}/bin/activate"
        yamllint \
          --config-file "tools/yscope-dev-utils/exports/lint-configs/.yamllint.yml" \
          --strict \
          .gersemirc \
          .github/ \
          build-tasks.yaml \
          dep-tasks.yaml \
          docs/tasks.yaml \
          lint-tasks.yaml \
          taskfile.yaml \
          test-tasks.yaml

  toml-check:
    cmds:
      - task: "toml-lint"
      - task: "toml-format"
        vars:
          FLAGS: "--check"

  toml-fix:
    cmds:
      - task: "toml-lint"
      - task: "toml-format"

  toml-lint:
    internal: true
    deps: ["venv"]
    cmds:
      - |-
        . "{{.G_LINT_VENV_DIR}}/bin/activate"
        tombi lint "{{.ROOT_DIR}}"

  toml-format:
    internal: true
    deps: ["venv"]
    vars:
      FLAGS: "{{.FLAGS | default \"\"}}"
    cmds:
      - |-
        . "{{.G_LINT_VENV_DIR}}/bin/activate"
        tombi format {{.FLAGS}} "{{.ROOT_DIR}}"

  cmake:
    internal: true
    requires:
      vars: ["FLAGS"]
    sources:
      - "CMakeLists.txt"
      - "src/spider/CMakeLists.txt"
      - "tests/CMakeLists.txt"
      - "examples/quick-start/CMakeLists.txt"
      - "cmake/Modules/*.cmake"
    cmds:
      - for: "sources"
        cmd: |-
          . "{{.G_LINT_VENV_DIR}}/bin/activate"
          gersemi {{.FLAGS}} {{.ITEM}}

  venv:
    internal: true
    vars:
      CHECKSUM_FILE: "{{.G_LINT_VENV_CHECKSUM_FILE}}"
      OUTPUT_DIR: "{{.G_LINT_VENV_DIR}}"
    sources:
      - "{{.ROOT_DIR}}/taskfile.yaml"
      - "{{.TASKFILE}}"
      - "requirements-dev.txt"
    generates: ["{{.CHECKSUM_FILE}}"]
    run: "once"
    deps:
      - ":init"
      - task: ":utils:checksum:validate"
        vars:
          CHECKSUM_FILE: "{{.CHECKSUM_FILE}}"
          INCLUDE_PATTERNS: ["{{.OUTPUT_DIR}}"]
    cmds:
      - task: ":utils:misc:create-venv"
        vars:
          LABEL: "lint"
          OUTPUT_DIR: "{{.OUTPUT_DIR}}"
          REQUIREMENTS_FILE: "{{.ROOT_DIR}}/requirements-dev.txt"
      # This command must be last
      - task: ":utils:checksum:compute"
        vars:
          CHECKSUM_FILE: "{{.CHECKSUM_FILE}}"
          INCLUDE_PATTERNS: ["{{.OUTPUT_DIR}}"]
